##################################### 
### JPA
jakarta.persistence.jdbc.driver=org.postgresql.Driver
jakarta.persistence.jdbc.url=jdbc:postgresql://127.0.0.1:5432/postgres
jakarta.persistence.jdbc.user=postgres
jakarta.persistence.jdbc.password=PASSWORD
 
hibernate.connection.ApplicationName=DBFSample
hibernate.connection.assumeMinServerVersion=13

jakarta.persistence.lock.timeout=100
jakarta.persistence.query.timeout=100

hibernate.show_sql=false
#####################################
## https://stackoverflow.com/questions/38960921/java-hibernate-exception-the-internal-connection-pool-has-reached-its-maximum
## "Also, as per the official documentation of hibernate: "Hibernate's own connection pooling algorithm is, however, quite rudimentary. It is intended to help you get started and is not intended for use in a production system, or even for performance testing. You should use a third party pool for best performance and stability. Just replace the hibernate.connection.pool_size property with connection pool specific settings. This will turn off Hibernate's internal pool. For example, you might like to use c3p0."
## TODO prüfen und ggf. zB C3PO implementieren
hibernate.connection.pool_size=100
#####################################